@model SpmsApp.ViewModels.VC.InstructorwisePloPerformanceComparisonViewModel;

@{
    ViewData["Title"] = "Instructor-wise PLO Performance";
}

<div class="row">
    <div class="col">@Html.Partial("TopBar", Model.TopbarViewModel)</div>
</div>
<div class="row" style="height: 100%;">
    <div class="col-2">
        @Html.Partial("VCSidebar")
    </div>
    <div class="col">
        @* HELL *@
        <form asp-action="InstructorwisePloPerformanceComparison" asp-controller="VC">
            <label>Select a Faculty:</label>
            <select asp-for="FacultyID" required>
                <option>Select a Faculty</option>
                @foreach (var faculty in Model.Faculties)
                {
                    <option value="@faculty.ID">@($"{faculty.FacultyID} - {faculty.FullName}")</option>
                }
            </select>
            <br>
            <label>Select Start Semester:</label>
            <select asp-for="StartSemester" asp-items=@Html.GetEnumSelectList(typeof(SemesterName))></select>
            <input type="number" asp-for="StartYear" placeholder="Enter Start Year">
            <br>
            <label>Select End Semester:</label>
            <select asp-for="EndSemester" asp-items=@Html.GetEnumSelectList(typeof(SemesterName))></select>
            <input type="number" asp-for="EndYear" placeholder="Enter End Year">
            <br>
            <input type="submit" value="Submit" class="btn btn-primary">
        </form>

        @if (Model.Data != null)
        {
            <div style="width: 85%;" id="draw-point">

            </div>

            <script>
                let drawPoint = document.getElementById('draw-point');
                drawPoint.innerHTML = "";

                var ctx = document.createElement('canvas');
                ctx.getContext('2d');
                drawPoint.appendChild(ctx);

                var myChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: @Html.Raw(Json.Serialize(Model.Data.PloList)),
                @* datasets: @Html.Raw(Json.Serialize(Model.Data.AchieveData)) *@
                    datasets: [{
                        label: 'Percentage of Achievement',
                        data: @Html.Raw(Json.Serialize(Model.Data.AchieveData)),
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)'
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)'
                        ],
                        borderWidth: 1
                    }]
                        },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true,
                                grid: {
                                offset: true
                            }
                        },
                        x: {
                            grid: {
                                offset: true
                            }
                        }
                    }
                }
                    })
            </script>
        }
    </div>
</div>